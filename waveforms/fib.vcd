$date
	Tue Jul  1 11:50:35 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_cpu $end
$var wire 32 ! alu_out [31:0] $end
$var wire 32 " instr [31:0] $end
$var wire 32 # pc [31:0] $end
$var wire 1 $ regWrite $end
$var reg 1 % clk $end
$var reg 1 & rst $end
$scope module core $end
$var wire 1 % clk $end
$var wire 1 & rst $end
$var wire 32 ' reg_rd2 [31:0] $end
$var wire 32 ( reg_rd1 [31:0] $end
$var wire 1 ) regWrite $end
$var wire 32 * pc [31:0] $end
$var wire 32 + instr [31:0] $end
$var wire 32 , alu_out [31:0] $end
$var wire 4 - alu_ctrl [3:0] $end
$scope module alu_inst $end
$var wire 32 . b [31:0] $end
$var wire 4 / alu_control [3:0] $end
$var wire 32 0 a [31:0] $end
$var reg 32 1 result [31:0] $end
$upscope $end
$scope module control_inst $end
$var wire 7 2 opcode [6:0] $end
$var reg 4 3 alu_control [3:0] $end
$var reg 1 ) regWrite $end
$upscope $end
$scope module imem $end
$var wire 32 4 instr [31:0] $end
$var wire 32 5 addr [31:0] $end
$upscope $end
$scope module pc_inst $end
$var wire 1 % clk $end
$var wire 1 & rst $end
$var reg 32 6 pc_out [31:0] $end
$upscope $end
$scope module rf $end
$var wire 1 % clk $end
$var wire 5 7 rd [4:0] $end
$var wire 32 8 rd1 [31:0] $end
$var wire 32 9 rd2 [31:0] $end
$var wire 1 ) reg_write $end
$var wire 5 : rs1 [4:0] $end
$var wire 5 ; rs2 [4:0] $end
$var wire 1 & rst $end
$var wire 32 < wd [31:0] $end
$var integer 32 = i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b100000 =
b0 <
b0 ;
b0 :
b0 9
b0 8
b1 7
b0 6
b0 5
b10010011 4
b10 3
b10011 2
b0 1
b0 0
b10 /
b0 .
b10 -
b0 ,
b10010011 +
b0 *
1)
b0 (
b0 '
1&
0%
1$
b0 #
b10010011 "
b0 !
$end
#2000
0&
#5000
b10 7
b100010011 "
b100010011 +
b100010011 4
b100 #
b100 *
b100 5
b100 6
1%
#10000
0%
#15000
b11 7
b110010011 "
b110010011 +
b110010011 4
b1000 #
b1000 *
b1000 5
b1000 6
1%
#20000
0%
#25000
b100 7
b1000010011 "
b1000010011 +
b1000010011 4
b1100 #
b1100 *
b1100 5
b1100 6
1%
#30000
0%
#35000
b0 -
b0 /
b0 3
0$
0)
bx !
bx ,
bx 1
bx <
bx 2
bx 7
bx '
bx .
bx 9
bx ;
bx (
bx 0
bx 8
bx :
bx "
bx +
bx 4
b10000 #
b10000 *
b10000 5
b10000 6
1%
#40000
0%
#45000
b10100 #
b10100 *
b10100 5
b10100 6
1%
#50000
0%
#55000
b11000 #
b11000 *
b11000 5
b11000 6
1%
#60000
0%
#65000
b11100 #
b11100 *
b11100 5
b11100 6
1%
#70000
0%
#75000
b100000 #
b100000 *
b100000 5
b100000 6
1%
#80000
0%
#85000
b100100 #
b100100 *
b100100 5
b100100 6
1%
#90000
0%
#95000
b101000 #
b101000 *
b101000 5
b101000 6
1%
#100000
0%
#105000
b101100 #
b101100 *
b101100 5
b101100 6
1%
#110000
0%
#115000
b110000 #
b110000 *
b110000 5
b110000 6
1%
#120000
0%
#125000
b110100 #
b110100 *
b110100 5
b110100 6
1%
#130000
0%
#135000
b111000 #
b111000 *
b111000 5
b111000 6
1%
#140000
0%
#145000
b111100 #
b111100 *
b111100 5
b111100 6
1%
#150000
0%
#155000
b1000000 #
b1000000 *
b1000000 5
b1000000 6
1%
#160000
0%
#165000
b1000100 #
b1000100 *
b1000100 5
b1000100 6
1%
#170000
0%
#175000
b1001000 #
b1001000 *
b1001000 5
b1001000 6
1%
#180000
0%
#185000
b1001100 #
b1001100 *
b1001100 5
b1001100 6
1%
#190000
0%
#195000
b1010000 #
b1010000 *
b1010000 5
b1010000 6
1%
#200000
0%
#205000
b1010100 #
b1010100 *
b1010100 5
b1010100 6
1%
#210000
0%
#215000
b1011000 #
b1011000 *
b1011000 5
b1011000 6
1%
#220000
0%
#225000
b1011100 #
b1011100 *
b1011100 5
b1011100 6
1%
#230000
0%
#235000
b1100000 #
b1100000 *
b1100000 5
b1100000 6
1%
#240000
0%
#245000
b1100100 #
b1100100 *
b1100100 5
b1100100 6
1%
#250000
0%
#255000
b1101000 #
b1101000 *
b1101000 5
b1101000 6
1%
#260000
0%
#265000
b1101100 #
b1101100 *
b1101100 5
b1101100 6
1%
#270000
0%
#275000
b1110000 #
b1110000 *
b1110000 5
b1110000 6
1%
#280000
0%
#285000
b1110100 #
b1110100 *
b1110100 5
b1110100 6
1%
#290000
0%
#295000
b1111000 #
b1111000 *
b1111000 5
b1111000 6
1%
#300000
0%
#302000
